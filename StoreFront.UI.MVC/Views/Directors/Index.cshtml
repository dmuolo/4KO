@model PagedList.IPagedList<StoreFront.DATA.EF.Director>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Directors Index";
}

<div id="all">
    <div id="content">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!-- breadcrumb-->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                            <li aria-current="page" class="breadcrumb-item">@ViewBag.Title</li>
                        </ol>
                    </nav>
                </div>
                <div id="blog-post" class="col-lg-12">
                    <div class="box">
                        <h1 class="text-center">@ViewBag.Title</h1>
                        <ul class="nav flex-column nav-pills">
                            <li>
                                <button id="toggleDirectorCreate" class="btn btn-primary">Create Director</button>
                            </li>
                        </ul>
                        <div id="DirectorCreate">
                            @Html.Partial("AjaxCreate", new StoreFront.DATA.EF.Director())
                        </div>
                        <br />
                        <div class="text-center" id="post-content">
                            <table class="table">
                                <tr>
                                    <th>
                                        First Name
                                    </th>
                                    <th>
                                        Last Name
                                    </th>
                                    <th></th>
                                </tr>
                                @foreach (var item in Model)
                                {
                                    <tr id="@item.DirectorID">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FirstName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.LastName)
                                        </td>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <td>
                                                <a href="" class="EditLink" id="@item.DirectorID">Edit</a> |
                                                <a href="" class="DetailsLink" id="@item.DirectorID">Details</a> |
                                                @Ajax.ActionLink("Delete", "AjaxDelete", "Directors", new { id = item.DirectorID }, new AjaxOptions {
               HttpMethod = "POST",
               Confirm = "Are you sure you want to delete " + item.FullName + " from directors?",
               OnSuccess = "deleteConfirmed"
           })
                                            </td>
                                        }
                                    </tr>
                                }
                            </table>
                            <!--Placeholders for jQueryUI Modal Pop ups-->
                            <div id="DirectorDetails"></div>
                            <div id="DirectorEdit"></div>
                        </div>
                    </div>
                    <!-- /.box-->
                </div>
                <!-- /#blog-post-->
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.SearchString }))
            </div>
        </div>
    </div>

    @section scripts{
        <script>
        //deleteConfirmed()
        function deleteConfirmed(response) {
            //remove the row from the table (in html without a browser refresh)
            var rowId = '#Director-' + response.id;
            $('#DirectorsTable').find(rowId).remove();

            //display status message (in our div above the RenderBody() in the _Layout)
            $('#MessageContent').html("<div class='alert alert-success'>" + response.message + "</div>");
        }

        //AJAX details dialog box (Modal from jQueryUI) - make sure you have the script for jQueryUI in your Layout
        $('a.DetailsLink').click(function (e) {
            e.preventDefault(); //to prevent it taking them to the hyperlink
            $('#DirectorDetails').data('dId', $(this).attr('id')).dialog({
                //dialog box properties (you can find these at jQueryUI.com - api documentation or view the modal information)
                modal: true,
                open: function () {
                    var data = $(this).data('dId');
                    $(this).load('/Directors/DirectorDetails/' + data)
                },
                width: 400,
                height: 200,
                title: 'Director Details',
                resizable: false
            });
        });

        //TOGGLING THE CREATE FORM open and closed
        //Show the create form when the publisher button is clicked; toggle visibility back and forth each time it's clicked
        $('#DirectorCreate').hide();
        $('#toggleDirectorCreate').click(function () {
            $('#DirectorCreate').toggle(); //toggles back and forth each time it's clicked
                                           //extra - change the appearance of the button based on the toggle/visibility
        if ($('#DirectorCreate').is(':visible')) {
                $('#toggleDirectorCreate').html('Cancel');
                $('#toggleDirectorCreate').attr('class', "btn btn-primary");
        }
            else {
                $('#toggleDirectorCreate').html('Create Director');
            $('#toggleDirectorCreate').attr('class', "btn btn-success");
        }
    });

        //PROCESS (or submit) THE CREATE FORM
        $('#DirectorCreateForm').submit(function (e) {
        //serialize (package the object (our form information) for transport)
        //this refers back to PublisherCreateForm
        var formData = $(this).serializeArray();
        //interrupt the normal submit event
        e.preventDefault();
            //message the user while processing
            //$() is the DOM selector
            $('#MessageContent').html("<div class='alert alert-info'>Please wait...</div>");

            //call to ajax and process form
            $.ajax({
        //action and controller to process the create
        url: "@Url.Action("AjaxCreate", "Directors")",

                //type of action that we're sending it to (post)
                type: "POST",

                //define the data as our serialized form
                data: formData,

                //define the data type as json (how we'll send it across)
                dataType: "json",

                //tell it what to do if successful process: show success message
                success: function (data) {
                    $('#MessageContent').html("<div class='alert alert-success'>Your record was added!</div>");
                    //at index of 0 means (when dealing with form, rather than picking first element in form, picks entire form)
                    $('#DirectorCreateForm')[0].reset();
                    //basically adding this row to table, creating a temporary code
                    //add the (temporary) row to the table (remember: the browser is being manually updated) -- we'll see a message to refresh the view to see the links - You could code those in, but Chuck likes to leave them out to see the asynchronous activity. When view refreshed, new record will load into the table WITH the links (null pull from the db with our record added)
                    $(function () {
                    var row = '<tr><td>' + data.FirstName +
                        '</td><td>' + data.LastName +
                        '</td><td>Refresh to view links</td></tr>';
                        //still need to add that row to the table
                        $('#DirectorsTable').append(row);

                        //close form and show create button again
                        $('#DirectorCreate').toggle();//closes form
                        $('#toggleDirectorCreate').html('Create Director');//changes text back to create publisher
                        $('#toggleDirectorCreate').attr('class', 'btn btn-primary');//changes button color to blue
                });
            }, //everything in this is for success
                //error - show alert message in the div above the render body
                //no dom selector
                error: function (e) {
                    $('#MessageContent').html(
                        "<div class-'alert alert-warning'>There was an error." +
                        " Please try again or contact the site administrator.</div>"
                    );
            }
        });
    });

        //***********Show the Edit Dialog Box*************************
        //e reps event arguments
        $('a.EditLink').click(function (e) {
            e.preventDefault();
            //data assignment
            $('#DirectorEdit').data('dId', $(this).attr('id')).dialog({
                //define the properties for the modal
                modal: true,
                open: function () {
                    var data = $(this).data('dId');
                    $(this).load('/Directors/DirectorEdit/' + data);//gives id to be edited
                },
                width: 600,
                height: 440,
                title: 'Edit Director',
                resizable: false
            });
        });
        </script>

    }
